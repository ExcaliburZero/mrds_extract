from __future__ import annotations

import io
from typing import Annotated

import dataclasses_struct as dcs
import numpy as np

from mrds_util.raw._monster import Monster
from mrds_util.raw._util import BinaryReadWriteable

# Note: There appears to be 2 copies of save data in the save file and they appear to checked
# against a checksum on start. Haven't fully tested the game's behavior, but it seems to load/use
# use whichever one passes the checksum and if both fail the checksum then it resets the save data
# (need to fully confirm this).
#
# When loading the game, the save data is stored at 0x023CE978, checksum is at 0x023CE9B0. The data
# is only there briefly after clicking continue but before being overwritten. Maybe its even
# overwritten on game successful load?
#
# The checksum does not appear to take into account data before it in the save entry.
#  * Nah, I think it looks at some earlier data? Saving and then re-saving results in different
#    checksums

#
# More checksum locations?
#  * 0x023DFFB8
#  * 0x023DFFF4
#  * 0x021AF078
#
# Maybe the data load or checksum happens in the ARM7 binary?
#
# Game does hit 0x020b4848 on startup
#
# First byte of unknown_a is incremented twice before checksumming for who knows what reason...


@dcs.dataclass_struct(size="std", byteorder="little")
class SaveEntry(BinaryReadWriteable):
    unknown_a: Annotated[bytes, 10]
    ranch_name: Annotated[bytes, 13]
    unknown_b: Annotated[bytes, 4]
    player_name: Annotated[bytes, 13]
    unknown_c: Annotated[bytes, 416]
    monsters: Annotated[list[Monster], 31]  # Current monster, then 30 in storage
    unknown_e: Annotated[bytes, 2104]
    checksum: dcs.U32

    def update_checksum(self) -> None:
        self.checksum = self.calculate_checksum()

    def calculate_checksum(self) -> int:
        checksum: int = 0xFFFFFFFF

        checksum_mapping: list[int] = [
            0x00000000,  # 0x00
            0x77073096,  # 0x01
            0xEE0E612C,  # 0x02
            0x990951BA,  # 0x03
            0x076DC419,  # 0x04
            0x706AF48F,  # 0x05
            0xE963A535,  # 0x06
            0x9E6495A3,  # 0x07
            0x0EDB8832,  # 0x08
            0x79DCB8A4,  # 0x09
            0xE0D5E91E,  # 0x0a
            0x97D2D988,  # 0x0b
            0x09B64C2B,  # 0x0c
            0x7EB17CBD,  # 0x0d
            0xE7B82D07,  # 0x0e
            0x90BF1D91,  # 0x0f
            0x1DB71064,  # 0x10
            0x6AB020F2,  # 0x11
            0xF3B97148,  # 0x12
            0x84BE41DE,  # 0x13
            0x1ADAD47D,  # 0x14
            0x6DDDE4EB,  # 0x15
            0xF4D4B551,  # 0x16
            0x83D385C7,  # 0x17
            0x136C9856,  # 0x18
            0x646BA8C0,  # 0x19
            0xFD62F97A,  # 0x1a
            0x8A65C9EC,  # 0x1b
            0x14015C4F,  # 0x1c
            0x63066CD9,  # 0x1d
            0xFA0F3D63,  # 0x1e
            0x8D080DF5,  # 0x1f
            0x3B6E20C8,  # 0x20
            0x4C69105E,  # 0x21
            0xD56041E4,  # 0x22
            0xA2677172,  # 0x23
            0x3C03E4D1,  # 0x24
            0x4B04D447,  # 0x25
            0xD20D85FD,  # 0x26
            0xA50AB56B,  # 0x27
            0x35B5A8FA,  # 0x28
            0x42B2986C,  # 0x29
            0xDBBBC9D6,  # 0x2a
            0xACBCF940,  # 0x2b
            0x32D86CE3,  # 0x2c
            0x45DF5C75,  # 0x2d
            0xDCD60DCF,  # 0x2e
            0xABD13D59,  # 0x2f
            0x26D930AC,  # 0x30
            0x51DE003A,  # 0x31
            0xC8D75180,  # 0x32
            0xBFD06116,  # 0x33
            0x21B4F4B5,  # 0x34
            0x56B3C423,  # 0x35
            0xCFBA9599,  # 0x36
            0xB8BDA50F,  # 0x37
            0x2802B89E,  # 0x38
            0x5F058808,  # 0x39
            0xC60CD9B2,  # 0x3a
            0xB10BE924,  # 0x3b
            0x2F6F7C87,  # 0x3c
            0x58684C11,  # 0x3d
            0xC1611DAB,  # 0x3e
            0xB6662D3D,  # 0x3f
            0x76DC4190,  # 0x40
            0x01DB7106,  # 0x41
            0x98D220BC,  # 0x42
            0xEFD5102A,  # 0x43
            0x71B18589,  # 0x44
            0x06B6B51F,  # 0x45
            0x9FBFE4A5,  # 0x46
            0xE8B8D433,  # 0x47
            0x7807C9A2,  # 0x48
            0x0F00F934,  # 0x49
            0x9609A88E,  # 0x4a
            0xE10E9818,  # 0x4b
            0x7F6A0DBB,  # 0x4c
            0x086D3D2D,  # 0x4d
            0x91646C97,  # 0x4e
            0xE6635C01,  # 0x4f
            0x6B6B51F4,  # 0x50
            0x1C6C6162,  # 0x51
            0x856530D8,  # 0x52
            0xF262004E,  # 0x53
            0x6C0695ED,  # 0x54
            0x1B01A57B,  # 0x55
            0x8208F4C1,  # 0x56
            0xF50FC457,  # 0x57
            0x65B0D9C6,  # 0x58
            0x12B7E950,  # 0x59
            0x8BBEB8EA,  # 0x5a
            0xFCB9887C,  # 0x5b
            0x62DD1DDF,  # 0x5c
            0x15DA2D49,  # 0x5d
            0x8CD37CF3,  # 0x5e
            0xFBD44C65,  # 0x5f
            0x4DB26158,  # 0x60
            0x3AB551CE,  # 0x61
            0xA3BC0074,  # 0x62
            0xD4BB30E2,  # 0x63
            0x4ADFA541,  # 0x64
            0x3DD895D7,  # 0x65
            0xA4D1C46D,  # 0x66
            0xD3D6F4FB,  # 0x67
            0x4369E96A,  # 0x68
            0x346ED9FC,  # 0x69
            0xAD678846,  # 0x6a
            0xDA60B8D0,  # 0x6b
            0x44042D73,  # 0x6c
            0x33031DE5,  # 0x6d
            0xAA0A4C5F,  # 0x6e
            0xDD0D7CC9,  # 0x6f
            0x5005713C,  # 0x70
            0x270241AA,  # 0x71
            0xBE0B1010,  # 0x72
            0xC90C2086,  # 0x73
            0x5768B525,  # 0x74
            0x206F85B3,  # 0x75
            0xB966D409,  # 0x76
            0xCE61E49F,  # 0x77
            0x5EDEF90E,  # 0x78
            0x29D9C998,  # 0x79
            0xB0D09822,  # 0x7a
            0xC7D7A8B4,  # 0x7b
            0x59B33D17,  # 0x7c
            0x2EB40D81,  # 0x7d
            0xB7BD5C3B,  # 0x7e
            0xC0BA6CAD,  # 0x7f
            0xEDB88320,  # 0x80
            0x9ABFB3B6,  # 0x81
            0x03B6E20C,  # 0x82
            0x74B1D29A,  # 0x83
            0xEAD54739,  # 0x84
            0x9DD277AF,  # 0x85
            0x04DB2615,  # 0x86
            0x73DC1683,  # 0x87
            0xE3630B12,  # 0x88
            0x94643B84,  # 0x89
            0x0D6D6A3E,  # 0x8a
            0x7A6A5AA8,  # 0x8b
            0xE40ECF0B,  # 0x8c
            0x9309FF9D,  # 0x8d
            0x0A00AE27,  # 0x8e
            0x7D079EB1,  # 0x8f
            0xF00F9344,  # 0x90
            0x8708A3D2,  # 0x91
            0x1E01F268,  # 0x92
            0x6906C2FE,  # 0x93
            0xF762575D,  # 0x94
            0x806567CB,  # 0x95
            0x196C3671,  # 0x96
            0x6E6B06E7,  # 0x97
            0xFED41B76,  # 0x98
            0x89D32BE0,  # 0x99
            0x10DA7A5A,  # 0x9a
            0x67DD4ACC,  # 0x9b
            0xF9B9DF6F,  # 0x9c
            0x8EBEEFF9,  # 0x9d
            0x17B7BE43,  # 0x9e
            0x60B08ED5,  # 0x9f
            0xD6D6A3E8,  # 0xa0
            0xA1D1937E,  # 0xa1
            0x38D8C2C4,  # 0xa2
            0x4FDFF252,  # 0xa3
            0xD1BB67F1,  # 0xa4
            0xA6BC5767,  # 0xa5
            0x3FB506DD,  # 0xa6
            0x48B2364B,  # 0xa7
            0xD80D2BDA,  # 0xa8
            0xAF0A1B4C,  # 0xa9
            0x36034AF6,  # 0xaa
            0x41047A60,  # 0xab
            0xDF60EFC3,  # 0xac
            0xA867DF55,  # 0xad
            0x316E8EEF,  # 0xae
            0x4669BE79,  # 0xaf
            0xCB61B38C,  # 0xb0
            0xBC66831A,  # 0xb1
            0x256FD2A0,  # 0xb2
            0x5268E236,  # 0xb3
            0xCC0C7795,  # 0xb4
            0xBB0B4703,  # 0xb5
            0x220216B9,  # 0xb6
            0x5505262F,  # 0xb7
            0xC5BA3BBE,  # 0xb8
            0xB2BD0B28,  # 0xb9
            0x2BB45A92,  # 0xba
            0x5CB36A04,  # 0xbb
            0xC2D7FFA7,  # 0xbc
            0xB5D0CF31,  # 0xbd
            0x2CD99E8B,  # 0xbe
            0x5BDEAE1D,  # 0xbf
            0x9B64C2B0,  # 0xc0
            0xEC63F226,  # 0xc1
            0x756AA39C,  # 0xc2
            0x026D930A,  # 0xc3
            0x9C0906A9,  # 0xc4
            0xEB0E363F,  # 0xc5
            0x72076785,  # 0xc6
            0x05005713,  # 0xc7
            0x95BF4A82,  # 0xc8
            0xE2B87A14,  # 0xc9
            0x7BB12BAE,  # 0xca
            0x0CB61B38,  # 0xcb
            0x92D28E9B,  # 0xcc
            0xE5D5BE0D,  # 0xcd
            0x7CDCEFB7,  # 0xce
            0x0BDBDF21,  # 0xcf
            0x86D3D2D4,  # 0xd0
            0xF1D4E242,  # 0xd1
            0x68DDB3F8,  # 0xd2
            0x1FDA836E,  # 0xd3
            0x81BE16CD,  # 0xd4
            0xF6B9265B,  # 0xd5
            0x6FB077E1,  # 0xd6
            0x18B74777,  # 0xd7
            0x88085AE6,  # 0xd8
            0xFF0F6A70,  # 0xd9
            0x66063BCA,  # 0xda
            0x11010B5C,  # 0xdb
            0x8F659EFF,  # 0xdc
            0xF862AE69,  # 0xdd
            0x616BFFD3,  # 0xde
            0x166CCF45,  # 0xdf
            0xA00AE278,  # 0xe0
            0xD70DD2EE,  # 0xe1
            0x4E048354,  # 0xe2
            0x3903B3C2,  # 0xe3
            0xA7672661,  # 0xe4
            0xD06016F7,  # 0xe5
            0x4969474D,  # 0xe6
            0x3E6E77DB,  # 0xe7
            0xAED16A4A,  # 0xe8
            0xD9D65ADC,  # 0xe9
            0x40DF0B66,  # 0xea
            0x37D83BF0,  # 0xeb
            0xA9BCAE53,  # 0xec
            0xDEBB9EC5,  # 0xed
            0x47B2CF7F,  # 0xee
            0x30B5FFE9,  # 0xef
            0xBDBDF21C,  # 0xf0
            0xCABAC28A,  # 0xf1
            0x53B39330,  # 0xf2
            0x24B4A3A6,  # 0xf3
            0xBAD03605,  # 0xf4
            0xCDD70693,  # 0xf5
            0x54DE5729,  # 0xf6
            0x23D967BF,  # 0xf7
            0xB3667A2E,  # 0xf8
            0xC4614AB8,  # 0xf9
            0x5D681B02,  # 0xfa
            0x2A6F2B94,  # 0xfb
            0xB40BBE37,  # 0xfc
            0xC30C8EA1,  # 0xfd
            0x5A05DF1B,  # 0xfe
            0x2D02EF8D,  # 0xff
            # 0xE23A39D2,  # 0x100
            # 0xC6A33D19,
            # 0x209360F4,
            # 0xD2C7CCE2,
            # 0x79AE70B4,
            # 0x8CA93127,
            # 0x42D027BD,
        ]

        output_stream = io.BytesIO()
        self.write_bin(output_stream)
        data = bytearray(output_stream.getbuffer())

        # print(data)

        # TODO: figure out what to do with this
        # data[0] += 1
        print("hash str:", hash(str(data)))
        print(data[0:10])
        print(data[-10:])

        # for byte in output_stream.getbuffer()[0:56]:
        print("initial", hex(checksum))
        # for byte in [0x0000004A]:
        for byte in data[0:56]:
            # for byte in output_stream.getbuffer()[0:2]:
            # print("------")
            # print("1)", f"{checksum:#010x}")
            # print("2)", f"{byte:#010x}")
            # print("3)", f"{checksum ^ byte:#010x}")
            # print("4)", f"{(checksum ^ byte) & 0xFF:#010x}")

            lookup = checksum_mapping[(checksum ^ byte) & 0xFF]
            # lookup = 0xBB0B4703

            # print("5)", f"{lookup:#010x}")

            checksum = int(np.uint32(lookup) ^ np.uint32(checksum) >> 8)
            # checksum = int(
            #    ~(np.uint32(checksum_mapping[(checksum ^ byte) & 0xFF]) ^ np.uint32(checksum) >> 8)
            # )  # Had to do the ~ here to match the behavior
            # ^^^^ I think this seemed needed due to a lieral encoding error, but was not actually needed
            # print("6)", f"{checksum:#010x}")
            assert checksum <= 0xFFFFFFFF

        partial_checksum = int(np.uint32(checksum) ^ 0xFFFFFFFF)
        print("partial", hex(partial_checksum))

        data[56:60] = partial_checksum.to_bytes(4, "little")
        print(bytes(data[0:61]))
        # print(len(data))
        # print(bytes(data[0x3CD0 : 0x3CDC + 4]))
        # assert False

        checksum: int = 0xFFFFFFFF
        for byte in data[0:0x3CDC]:
            # print("------")
            # print("1)", f"{checksum:#010x}")
            # print("2)", f"{byte:#010x}")
            # print("3)", f"{checksum ^ byte:#010x}")
            # print("4)", f"{(checksum ^ byte) & 0xFF:#010x}")

            lookup = checksum_mapping[(checksum ^ byte) & 0xFF]

            # print("5)", f"{lookup:#010x}")

            checksum = int(np.uint32(lookup) ^ np.uint32(checksum) >> 8)
            assert checksum <= 0xFFFFFFFF

            # print("6)", f"{checksum:#010x}")

        checksum = int(np.uint32(checksum) ^ 0xFFFFFFFF)
        print("final", hex(checksum))

        return checksum


@dcs.dataclass_struct(size="std", byteorder="little")
class SaveFile(BinaryReadWriteable):
    header: Annotated[bytes, 34]  # Game name twice?
    entries: Annotated[list[SaveEntry], 2]


"""
        checksum_mapping: list[int] = [
            0x00000000,  # 0x00
            0x96300777,  # 0x01
            0x2C610EEE,  # 0x02
            0xBA510999,  # 0x03
            0x19C46D07,  # 0x04
            0x8FF46A70,  # 0x05
            0x35A563E9,  # 0x06
            0xA395649E,  # 0x07
            0x3288DB0E,  # 0x08
            0xA4B8DC79,  # 0x09
            0x1EE9D5E0,  # 0x0a
            0x88D9D297,  # 0x0b
            0x2B4CB609,  # 0x0c
            0xBD7CB17E,  # 0x0d
            0x072DB8E7,  # 0x0e
            0x911DBF90,  # 0x0f
            0x6410B71D,  # 0x10
            0xF220B06A,  # 0x11
            0x4871B9F3,  # 0x12
            0xDE41BE84,  # 0x13
            0x7DD4DA1A,  # 0x14
            0xEBE4DD6D,  # 0x15
            0x51B5D4F4,  # 0x16
            0xC785D383,  # 0x17
            0x56986C13,  # 0x18
            0xC0A86B64,  # 0x19
            0x7AF962FD,  # 0x1a
            0xECC9658A,  # 0x1b
            0x4F5C0114,  # 0x1c
            0xD96C0663,  # 0x1d
            0x633D0FFA,  # 0x1e
            0xF50D088D,  # 0x1f
            0xC8206E3B,  # 0x20
            0x5E10694C,  # 0x21
            0xE44160D5,  # 0x22
            0x727167A2,  # 0x23
            0xD1E4033C,  # 0x24
            0x47D4044B,  # 0x25
            0xFD850DD2,  # 0x26
            0x6BB50AA5,  # 0x27
            0xFAA8B535,  # 0x28
            0x6C98B242,  # 0x29
            0xD6C9BBDB,  # 0x2a
            0x40F9BCAC,  # 0x2b
            0xE36CD832,  # 0x2c
            0x755CDF45,  # 0x2d
            0xCF0DD6DC,  # 0x2e
            0x593DD1AB,  # 0x2f
            0xAC30D926,  # 0x30
            0x3A00DE51,  # 0x31
            0x8051D7C8,  # 0x32
            0x1661D0BF,  # 0x33
            0xB5F4B421,  # 0x34
            0x23C4B356,  # 0x35
            0x9995BACF,  # 0x36
            0x0FA5BDB8,  # 0x37
            0x9EB80228,  # 0x38
            0x0888055F,  # 0x39
            0xB2D90CC6,  # 0x3a
            0x24E90BB1,  # 0x3b
            0x877C6F2F,  # 0x3c
            0x114C6858,  # 0x3d
            0xAB1D61C1,  # 0x3e
            0x3D2D66B6,  # 0x3f
            0x9041DC76,  # 0x40
            0x0671DB01,  # 0x41
            0xBC20D298,  # 0x42
            0x2A10D5EF,  # 0x43
            0x8985B171,  # 0x44
            0x1FB5B606,  # 0x45
            0xA5E4BF9F,  # 0x46
            0x33D4B8E8,  # 0x47
            0xA2C90778,  # 0x48
            0x34F9000F,  # 0x49
            0x8EA80996,  # 0x4a
            0x18980EE1,  # 0x4b
            0xBB0D6A7F,  # 0x4c
            0x2D3D6D08,  # 0x4d
            0x976C6491,  # 0x4e
            0x015C63E6,  # 0x4f
            0xF4516B6B,  # 0x50
            0x62616C1C,  # 0x51
            0xD8306585,  # 0x52
            0x4E0062F2,  # 0x53
            0xED95066C,  # 0x54
            0x7BA5011B,  # 0x55
            0xC1F40882,  # 0x56
            0x57C40FF5,  # 0x57
            0xC6D9B065,  # 0x58
            0x50E9B712,  # 0x59
            0xEAB8BE8B,  # 0x5a
            0x7C88B9FC,  # 0x5b
            0xDF1DDD62,  # 0x5c
            0x492DDA15,  # 0x5d
            0xF37CD38C,  # 0x5e
            0x654CD4FB,  # 0x5f
            0x5861B24D,  # 0x60
            0xCE51B53A,  # 0x61
            0x7400BCA3,  # 0x62
            0xE230BBD4,  # 0x63
            0x41A5DF4A,  # 0x64
            0xD795D83D,  # 0x65
            0x6DC4D1A4,  # 0x66
            0xFBF4D6D3,  # 0x67
            0x6AE96943,  # 0x68
            0xFCD96E34,  # 0x69
            0x468867AD,  # 0x6a
            0xD0B860DA,  # 0x6b
            0x732D0444,  # 0x6c
            0xE51D0333,  # 0x6d
            0x5F4C0AAA,  # 0x6e
            0xC97C0DDD,  # 0x6f
            0x3C710550,  # 0x70
            0xAA410227,  # 0x71
            0x10100BBE,  # 0x72
            0x86200CC9,  # 0x73
            0x25B56857,  # 0x74
            0xB3856F20,  # 0x75
            0x09D466B9,  # 0x76
            0x9FE461CE,  # 0x77
            0x0EF9DE5E,  # 0x78
            0x98C9D929,  # 0x79
            0x2298D0B0,  # 0x7a
            0xB4A8D7C7,  # 0x7b
            0x173DB359,  # 0x7c
            0x810DB42E,  # 0x7d
            0x3B5CBDB7,  # 0x7e
            0xAD6CBAC0,  # 0x7f
            0x2083B8ED,  # 0x80
            0xB6B3BF9A,  # 0x81
            0x0CE2B603,  # 0x82
            0x9AD2B174,  # 0x83
            0x3947D5EA,  # 0x84
            0xAF77D29D,  # 0x85
            0x1526DB04,  # 0x86
            0x8316DC73,  # 0x87
            0x120B63E3,  # 0x88
            0x843B6494,  # 0x89
            0x3E6A6D0D,  # 0x8a
            0xA85A6A7A,  # 0x8b
            0x0BCF0EE4,  # 0x8c
            0x9DFF0993,  # 0x8d
            0x27AE000A,  # 0x8e
            0xB19E077D,  # 0x8f
            0x44930FF0,  # 0x90
            0xD2A30887,  # 0x91
            0x68F2011E,  # 0x92
            0xFEC20669,  # 0x93
            0x5D5762F7,  # 0x94
            0xCB676580,  # 0x95
            0x71366C19,  # 0x96
            0xE7066B6E,  # 0x97
            0x761BD4FE,  # 0x98
            0xE02BD389,  # 0x99
            0x5A7ADA10,  # 0x9a
            0xCC4ADD67,  # 0x9b
            0x6FDFB9F9,  # 0x9c
            0xF9EFBE8E,  # 0x9d
            0x43BEB717,  # 0x9e
            0xD58EB060,  # 0x9f
            0xE8A3D6D6,  # 0xa0
            0x7E93D1A1,  # 0xa1
            0xC4C2D838,  # 0xa2
            0x52F2DF4F,  # 0xa3
            0xF167BBD1,  # 0xa4
            0x6757BCA6,  # 0xa5
            0xDD06B53F,  # 0xa6
            0x4B36B248,  # 0xa7
            0xDA2B0DD8,  # 0xa8
            0x4C1B0AAF,  # 0xa9
            0xF64A0336,  # 0xaa
            0x607A0441,  # 0xab
            0xC3EF60DF,  # 0xac
            0x55DF67A8,  # 0xad
            0xEF8E6E31,  # 0xae
            0x79BE6946,  # 0xaf
            0x8CB361CB,  # 0xb0
            0x1A8366BC,  # 0xb1
            0xA0D26F25,  # 0xb2
            0x36E26852,  # 0xb3
            0x95770CCC,  # 0xb4
            0x03470BBB,  # 0xb5
            0xB9160222,  # 0xb6
            0x2F260555,  # 0xb7
            0xBE3BBAC5,  # 0xb8
            0x280BBDB2,  # 0xb9
            0x925AB42B,  # 0xba
            0x046AB35C,  # 0xbb
            0xA7FFD7C2,  # 0xbc
            0x31CFD0B5,  # 0xbd
            0x8B9ED92C,  # 0xbe
            0x1DAEDE5B,  # 0xbf
            0xB0C2649B,  # 0xc0
            0x26F263EC,  # 0xc1
            0x9CA36A75,  # 0xc2
            0x0A936D02,  # 0xc3
            0xA906099C,  # 0xc4
            0x3F360EEB,  # 0xc5
            0x85670772,  # 0xc6
            0x13570005,  # 0xc7
            0x824ABF95,  # 0xc8
            0x147AB8E2,  # 0xc9
            0xAE2BB17B,  # 0xca
            0x381BB60C,  # 0xcb
            0x9B8ED292,  # 0xcc
            0x0DBED5E5,  # 0xcd
            0xB7EFDC7C,  # 0xce
            0x21DFDB0B,  # 0xcf
            0xD4D2D386,  # 0xd0
            0x42E2D4F1,  # 0xd1
            0xF8B3DD68,  # 0xd2
            0x6E83DA1F,  # 0xd3
            0xCD16BE81,  # 0xd4
            0x5B26B9F6,  # 0xd5
            0xE177B06F,  # 0xd6
            0x7747B718,  # 0xd7
            0xE65A0888,  # 0xd8
            0x706A0FFF,  # 0xd9
            0xCA3B0666,  # 0xda
            0x5C0B0111,  # 0xdb
            0xFF9E658F,  # 0xdc
            0x69AE62F8,  # 0xdd
            0xD3FF6B61,  # 0xde
            0x45CF6C16,  # 0xdf
            0x78E20AA0,  # 0xe0
            0xEED20DD7,  # 0xe1
            0x5483044E,  # 0xe2
            0xC2B30339,  # 0xe3
            0x612667A7,  # 0xe4
            0xF71660D0,  # 0xe5
            0x4D476949,  # 0xe6
            0xDB776E3E,  # 0xe7
            0x4A6AD1AE,  # 0xe8
            0xDC5AD6D9,  # 0xe9
            0x660BDF40,  # 0xea
            0xF03BD837,  # 0xeb
            0x53AEBCA9,  # 0xec
            0xC59EBBDE,  # 0xed
            0x7FCFB247,  # 0xee
            0xE9FFB530,  # 0xef
            0x1CF2BDBD,  # 0xf0
            0x8AC2BACA,  # 0xf1
            0x3093B353,  # 0xf2
            0xA6A3B424,  # 0xf3
            0x0536D0BA,  # 0xf4
            0x9306D7CD,  # 0xf5
            0x2957DE54,  # 0xf6
            0xBF67D923,  # 0xf7
            0x2E7A66B3,  # 0xf8
            0xB84A61C4,  # 0xf9
            0x021B685D,  # 0xfa
            0x942B6F2A,  # 0xfb
            0x37BE0BB4,  # 0xfc
            0xA18E0CC3,  # 0xfd
            0x1BDF055A,  # 0xfe
            0x8DEF022D,  # 0xff
            # 0xE23A39D2,  # 0x100
            # 0xC6A33D19,
            # 0x209360F4,
            # 0xD2C7CCE2,
            # 0x79AE70B4,
            # 0x8CA93127,
            # 0x42D027BD,
        ]
"""

"""

        checksum_mapping: list[int] = [
            0x00000000,  # 0x00
            0x77073096,  # 0x01
            0xEE0E612C,  # 0x02
            #
            0x990951BA,  # 0x03
            0x076DC419,  # 0x04
            0x706AF48F,  # 0x05
            0xE963A535,  # 0x06
            0x9E6495A3,  # 0x07
            0x0EDB8832,  # 0x08
            0x79DCB8A4,  # 0x09
            0xE0D5E91E,  # 0x0a
            0x97D2D988,  # 0x0b
            0x09B64C2B,  # 0x0c
            0x7EB17CBD,  # 0x0d
            0xE7B82D07,  # 0x0e
            0x90BF1D91,  # 0x0f
            0x1DB71064,  # 0x10
            0x6AB020F2,  # 0x11
            0xF3B97148,  # 0x12
            0x84BE41DE,  # 0x13
            0x1ADAD47D,  # 0x14
            0x6DDDE4EB,  # 0x15
            0xF4D4B551,  # 0x16
            0x83D385C7,  # 0x17
            0x136C9856,  # 0x18
            0x646BA8C0,  # 0x19
            0xFD62F97A,  # 0x1a
            0x8A65C9EC,  # 0x1b
            0x14015C4F,  # 0x1c
            0x63066CD9,  # 0x1d
            0xFA0F3D63,  # 0x1e
            0x8D080DF5,  # 0x1f
            0x3B6E20C8,  # 0x20
            0x4C69105E,  # 0x21
            0xD56041E4,  # 0x22
            0xA2677172,  # 0x23
            0x3C03E4D1,  # 0x24
            0x4B04D447,  # 0x25
            0xD20D85FD,  # 0x26
            0xA50AB56B,  # 0x27
            0x35B5A8FA,  # 0x28
            0x42B2986C,  # 0x29
            0xDBBBC9D6,  # 0x2a
            0xACBCF940,  # 0x2b
            0x32D86CE3,  # 0x2c
            0x45DF5C75,  # 0x2d
            0xDCD60DCF,  # 0x2e
            0xABD13D59,  # 0x2f
            0x26D930AC,  # 0x30
            0x51DE003A,  # 0x31
            0xC8D75180,  # 0x32
            0xBFD06116,  # 0x33
            0x21B4F4B5,  # 0x34
            0x56B3C423,  # 0x35
            0xCFBA9599,  # 0x36
            0xB8BDA50F,  # 0x37
            0x2802B89E,  # 0x38
            0x5F058808,  # 0x39
            0xC60CD9B2,  # 0x3a
            0xB10BE924,  # 0x3b
            0x2F6F7C87,  # 0x3c
            0x58684C11,  # 0x3d
            0xC1611DAB,  # 0x3e
            0xB6662D3D,  # 0x3f
            0x76DC4190,  # 0x40
            0x01DB7106,  # 0x41
            0x98D220BC,  # 0x42
            0xEFD5102A,  # 0x43
            0x71B18589,  # 0x44
            0x06B6B51F,  # 0x45
            0x9FBFE4A5,  # 0x46
            0xE8B8D433,  # 0x47
            0x7807C9A2,  # 0x48
            0x0F00F934,  # 0x49
            0x9609A88E,  # 0x4a
            0xE10E9818,  # 0x4b
            0x7F6A0DBB,  # 0x4c
            0x086D3D2D,  # 0x4d
            0x91646C97,  # 0x4e
            0xE6635C01,  # 0x4f
            0x6B6B51F4,  # 0x50
            0x1C6C6162,  # 0x51
            0x856530D8,  # 0x52
            0xF262004E,  # 0x53
            0x6C0695ED,  # 0x54
            0x1B01A57B,  # 0x55
            0x8208F4C1,  # 0x56
            0xF50FC457,  # 0x57
            0x65B0D9C6,  # 0x58
            0x12B7E950,  # 0x59
            0x8BBEB8EA,  # 0x5a
            0xFCB9887C,  # 0x5b
            0x62DD1DDF,  # 0x5c
            0x15DA2D49,  # 0x5d
            0x8CD37CF3,  # 0x5e
            0xFBD44C65,  # 0x5f
            0x4DB26158,  # 0x60
            0x3AB551CE,  # 0x61
            0xA3BC0074,  # 0x62
            0xD4BB30E2,  # 0x63
            0x4ADFA541,  # 0x64
            0x3DD895D7,  # 0x65
            0xA4D1C46D,  # 0x66
            0xD3D6F4FB,  # 0x67
            0x4369E96A,  # 0x68
            0x346ED9FC,  # 0x69
            0xAD678846,  # 0x6a
            0xDA60B8D0,  # 0x6b
            0x44042D73,  # 0x6c
            0x33031DE5,  # 0x6d
            0xAA0A4C5F,  # 0x6e
            0xDD0D7CC9,  # 0x6f
            0x5005713C,  # 0x70
            0x270241AA,  # 0x71
            0xBE0B1010,  # 0x72
            0xC90C2086,  # 0x73
            0x5768B525,  # 0x74
            0x206F85B3,  # 0x75
            0xB966D409,  # 0x76
            0xCE61E49F,  # 0x77
            0x5EDEF90E,  # 0x78
            0x29D9C998,  # 0x79
            0xB0D09822,  # 0x7a
            0xC7D7A8B4,  # 0x7b
            0x59B33D17,  # 0x7c
            0x2EB40D81,  # 0x7d
            0xB7BD5C3B,  # 0x7e
            0xC0BA6CAD,  # 0x7f
            0xEDB88320,  # 0x80
            0x9ABFB3B6,  # 0x81
            0x03B6E20C,  # 0x82
            0x74B1D29A,  # 0x83
            0xEAD54739,  # 0x84
            0x9DD277AF,  # 0x85
            0x04DB2615,  # 0x86
            0x73DC1683,  # 0x87
            0xE3630B12,  # 0x88
            0x94643B84,  # 0x89
            0x0D6D6A3E,  # 0x8a
            0x7A6A5AA8,  # 0x8b
            0xE40ECF0B,  # 0x8c
            0x9309FF9D,  # 0x8d
            0x0A00AE27,  # 0x8e
            0x7D079EB1,  # 0x8f
            0xF00F9344,  # 0x90
            0x8708A3D2,  # 0x91
            0x1E01F268,  # 0x92
            0x6906C2FE,  # 0x93
            0xF762575D,  # 0x94
            0x806567CB,  # 0x95
            0x196C3671,  # 0x96
            0x6E6B06E7,  # 0x97
            0xFED41B76,  # 0x98
            0x89D32BE0,  # 0x99
            0x10DA7A5A,  # 0x9a
            0x67DD4ACC,  # 0x9b
            0xF9B9DF6F,  # 0x9c
            0x8EBEEFF9,  # 0x9d
            0x17B7BE43,  # 0x9e
            0x60B08ED5,  # 0x9f
            0xD6D6A3E8,  # 0xa0
            0xA1D1937E,  # 0xa1
            0x38D8C2C4,  # 0xa2
            0x4FDFF252,  # 0xa3
            0xD1BB67F1,  # 0xa4
            0xA6BC5767,  # 0xa5
            0x3FB506DD,  # 0xa6
            0x48B2364B,  # 0xa7
            0xD80D2BDA,  # 0xa8
            0xAF0A1B4C,  # 0xa9
            0x36034AF6,  # 0xaa
            0x41047A60,  # 0xab
            0xDF60EFC3,  # 0xac
            0xA867DF55,  # 0xad
            0x316E8EEF,  # 0xae
            0x4669BE79,  # 0xaf
            0xCB61B38C,  # 0xb0
            0xBC66831A,  # 0xb1
            0x256FD2A0,  # 0xb2
            0x5268E236,  # 0xb3
            0xCC0C7795,  # 0xb4
            0xBB0B4703,  # 0xb5
            0x220216B9,  # 0xb6
            0x5505262F,  # 0xb7
            0xC5BA3BBE,  # 0xb8
            0xB2BD0B28,  # 0xb9
            0x2BB45A92,  # 0xba
            0x5CB36A04,  # 0xbb
            0xC2D7FFA7,  # 0xbc
            0xB5D0CF31,  # 0xbd
            0x2CD99E8B,  # 0xbe
            0x5BDEAE1D,  # 0xbf
            0x9B64C2B0,  # 0xc0
            0xEC63F226,  # 0xc1
            0x756AA39C,  # 0xc2
            0x026D930A,  # 0xc3
            0x9C0906A9,  # 0xc4
            0xEB0E363F,  # 0xc5
            0x72076785,  # 0xc6
            0x05005713,  # 0xc7
            0x95BF4A82,  # 0xc8
            0xE2B87A14,  # 0xc9
            0x7BB12BAE,  # 0xca
            0x0CB61B38,  # 0xcb
            0x92D28E9B,  # 0xcc
            0xE5D5BE0D,  # 0xcd
            0x7CDCEFB7,  # 0xce
            0x0BDBDF21,  # 0xcf
            0x86D3D2D4,  # 0xd0
            0xF1D4E242,  # 0xd1
            0x68DDB3F8,  # 0xd2
            0x1FDA836E,  # 0xd3
            0x81BE16CD,  # 0xd4
            0xF6B9265B,  # 0xd5
            0x6FB077E1,  # 0xd6
            0x18B74777,  # 0xd7
            0x88085AE6,  # 0xd8
            0xFF0F6A70,  # 0xd9
            0x66063BCA,  # 0xda
            0x11010B5C,  # 0xdb
            0x8F659EFF,  # 0xdc
            0xF862AE69,  # 0xdd
            0x616BFFD3,  # 0xde
            0x166CCF45,  # 0xdf
            0xA00AE278,  # 0xe0
            0xD70DD2EE,  # 0xe1
            0x4E048354,  # 0xe2
            0x3903B3C2,  # 0xe3
            0xA7672661,  # 0xe4
            0xD06016F7,  # 0xe5
            0x4969474D,  # 0xe6
            0x3E6E77DB,  # 0xe7
            0xAED16A4A,  # 0xe8
            0xD9D65ADC,  # 0xe9
            0x40DF0B66,  # 0xea
            0x37D83BF0,  # 0xeb
            0xA9BCAE53,  # 0xec
            0xDEBB9EC5,  # 0xed
            0x47B2CF7F,  # 0xee
            0x30B5FFE9,  # 0xef
            0xBDBDF21C,  # 0xf0
            0xCABAC28A,  # 0xf1
            0x53B39330,  # 0xf2
            0x24B4A3A6,  # 0xf3
            0xBAD03605,  # 0xf4
            0xCDD70693,  # 0xf5
            0x54DE5729,  # 0xf6
            0x23D967BF,  # 0xf7
            0xB3667A2E,  # 0xf8
            0xC4614AB8,  # 0xf9
            0x5D681B02,  # 0xfa
            0x2A6F2B94,  # 0xfb
            0xB40BBE37,  # 0xfc
            0xC30C8EA1,  # 0xfd
            0x5A05DF1B,  # 0xfe
            0x2D02EF8D,  # 0xff
            # 0xE23A39D2,  # 0x100
            # 0xC6A33D19,
            # 0x209360F4,
            # 0xD2C7CCE2,
            # 0x79AE70B4,
            # 0x8CA93127,
            # 0x42D027BD,
        ]
"""
